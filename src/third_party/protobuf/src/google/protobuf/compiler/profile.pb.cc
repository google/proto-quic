// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: google/protobuf/compiler/profile.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include <google/protobuf/compiler/profile.pb.h>

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace google {
namespace protobuf {
namespace compiler {
class FieldAccessInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<FieldAccessInfo> {
} _FieldAccessInfo_default_instance_;
class MessageAccessInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<MessageAccessInfo> {
} _MessageAccessInfo_default_instance_;
class AccessInfoDefaultTypeInternal : public ::google::protobuf::internal::ExplicitlyConstructed<AccessInfo> {
} _AccessInfo_default_instance_;

namespace protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto {


namespace {

::google::protobuf::Metadata file_level_metadata[3];

}  // namespace

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTableField
    const TableStruct::entries[] = {
  {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::AuxillaryParseTableField
    const TableStruct::aux[] = {
  ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR ::google::protobuf::internal::ParseTable const
    TableStruct::schema[] = {
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
  { NULL, NULL, 0, -1, -1, false },
};

const ::google::protobuf::uint32 TableStruct::offsets[] = {
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldAccessInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldAccessInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldAccessInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldAccessInfo, getters_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldAccessInfo, setters_count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FieldAccessInfo, configs_count_),
  0,
  1,
  2,
  3,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageAccessInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageAccessInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageAccessInfo, name_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageAccessInfo, count_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(MessageAccessInfo, field_),
  0,
  1,
  ~0u,
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessInfo, _has_bits_),
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessInfo, _internal_metadata_),
  ~0u,  // no _extensions_
  ~0u,  // no _oneof_case_
  ~0u,  // no _weak_field_map_
  GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AccessInfo, message_),
  ~0u,
};

static const ::google::protobuf::internal::MigrationSchema schemas[] = {
  { 0, 9, sizeof(FieldAccessInfo)},
  { 13, 21, sizeof(MessageAccessInfo)},
  { 24, 30, sizeof(AccessInfo)},
};

static ::google::protobuf::Message const * const file_default_instances[] = {
  reinterpret_cast<const ::google::protobuf::Message*>(&_FieldAccessInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_MessageAccessInfo_default_instance_),
  reinterpret_cast<const ::google::protobuf::Message*>(&_AccessInfo_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
  AddDescriptors();
  ::google::protobuf::MessageFactory* factory = NULL;
  AssignDescriptors(
      "google/protobuf/compiler/profile.proto", schemas, file_default_instances, TableStruct::offsets, factory,
      file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 3);
}

}  // namespace

void TableStruct::Shutdown() {
  _FieldAccessInfo_default_instance_.Shutdown();
  delete file_level_metadata[0].reflection;
  _MessageAccessInfo_default_instance_.Shutdown();
  delete file_level_metadata[1].reflection;
  _AccessInfo_default_instance_.Shutdown();
  delete file_level_metadata[2].reflection;
}

void TableStruct::InitDefaultsImpl() {
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::internal::InitProtobufDefaults();
  _FieldAccessInfo_default_instance_.DefaultConstruct();
  _MessageAccessInfo_default_instance_.DefaultConstruct();
  _AccessInfo_default_instance_.DefaultConstruct();
}

void InitDefaults() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
void AddDescriptorsImpl() {
  InitDefaults();
  static const char descriptor[] = {
      "\n&google/protobuf/compiler/profile.proto"
      "\022\030google.protobuf.compiler\"d\n\017FieldAcces"
      "sInfo\022\014\n\004name\030\001 \001(\t\022\025\n\rgetters_count\030\002 \001"
      "(\004\022\025\n\rsetters_count\030\003 \001(\004\022\025\n\rconfigs_cou"
      "nt\030\004 \001(\004\"j\n\021MessageAccessInfo\022\014\n\004name\030\001 "
      "\001(\t\022\r\n\005count\030\002 \001(\004\0228\n\005field\030\003 \003(\0132).goog"
      "le.protobuf.compiler.FieldAccessInfo\"J\n\n"
      "AccessInfo\022<\n\007message\030\001 \003(\0132+.google.pro"
      "tobuf.compiler.MessageAccessInfo"
  };
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
      descriptor, 352);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "google/protobuf/compiler/profile.proto", &protobuf_RegisterTypes);
  ::google::protobuf::internal::OnShutdown(&TableStruct::Shutdown);
}

void AddDescriptors() {
  static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
  ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
  StaticDescriptorInitializer() {
    AddDescriptors();
  }
} static_descriptor_initializer;

}  // namespace protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto


// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FieldAccessInfo::kNameFieldNumber;
const int FieldAccessInfo::kGettersCountFieldNumber;
const int FieldAccessInfo::kSettersCountFieldNumber;
const int FieldAccessInfo::kConfigsCountFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FieldAccessInfo::FieldAccessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.compiler.FieldAccessInfo)
}
FieldAccessInfo::FieldAccessInfo(const FieldAccessInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  ::memcpy(&getters_count_, &from.getters_count_,
    static_cast<size_t>(reinterpret_cast<char*>(&configs_count_) -
    reinterpret_cast<char*>(&getters_count_)) + sizeof(configs_count_));
  // @@protoc_insertion_point(copy_constructor:google.protobuf.compiler.FieldAccessInfo)
}

void FieldAccessInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  ::memset(&getters_count_, 0, static_cast<size_t>(
      reinterpret_cast<char*>(&configs_count_) -
      reinterpret_cast<char*>(&getters_count_)) + sizeof(configs_count_));
}

FieldAccessInfo::~FieldAccessInfo() {
  // @@protoc_insertion_point(destructor:google.protobuf.compiler.FieldAccessInfo)
  SharedDtor();
}

void FieldAccessInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void FieldAccessInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FieldAccessInfo::descriptor() {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FieldAccessInfo& FieldAccessInfo::default_instance() {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

FieldAccessInfo* FieldAccessInfo::New(::google::protobuf::Arena* arena) const {
  FieldAccessInfo* n = new FieldAccessInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void FieldAccessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.compiler.FieldAccessInfo)
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  if (_has_bits_[0 / 32] & 14u) {
    ::memset(&getters_count_, 0, static_cast<size_t>(
        reinterpret_cast<char*>(&configs_count_) -
        reinterpret_cast<char*>(&getters_count_)) + sizeof(configs_count_));
  }
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool FieldAccessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.compiler.FieldAccessInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.compiler.FieldAccessInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 getters_count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_getters_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &getters_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 setters_count = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(24u)) {
          set_has_setters_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &setters_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 configs_count = 4;
      case 4: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(32u)) {
          set_has_configs_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &configs_count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.compiler.FieldAccessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.compiler.FieldAccessInfo)
  return false;
#undef DO_
}

void FieldAccessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.compiler.FieldAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.FieldAccessInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 getters_count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->getters_count(), output);
  }

  // optional uint64 setters_count = 3;
  if (cached_has_bits & 0x00000004u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->setters_count(), output);
  }

  // optional uint64 configs_count = 4;
  if (cached_has_bits & 0x00000008u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->configs_count(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.compiler.FieldAccessInfo)
}

::google::protobuf::uint8* FieldAccessInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.compiler.FieldAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.FieldAccessInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 getters_count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->getters_count(), target);
  }

  // optional uint64 setters_count = 3;
  if (cached_has_bits & 0x00000004u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->setters_count(), target);
  }

  // optional uint64 configs_count = 4;
  if (cached_has_bits & 0x00000008u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->configs_count(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.compiler.FieldAccessInfo)
  return target;
}

size_t FieldAccessInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.compiler.FieldAccessInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  if (_has_bits_[0 / 32] & 15u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 getters_count = 2;
    if (has_getters_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->getters_count());
    }

    // optional uint64 setters_count = 3;
    if (has_setters_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->setters_count());
    }

    // optional uint64 configs_count = 4;
    if (has_configs_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->configs_count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FieldAccessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.compiler.FieldAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const FieldAccessInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const FieldAccessInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.compiler.FieldAccessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.compiler.FieldAccessInfo)
    MergeFrom(*source);
  }
}

void FieldAccessInfo::MergeFrom(const FieldAccessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.compiler.FieldAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 15u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      getters_count_ = from.getters_count_;
    }
    if (cached_has_bits & 0x00000004u) {
      setters_count_ = from.setters_count_;
    }
    if (cached_has_bits & 0x00000008u) {
      configs_count_ = from.configs_count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void FieldAccessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.compiler.FieldAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FieldAccessInfo::CopyFrom(const FieldAccessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.compiler.FieldAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FieldAccessInfo::IsInitialized() const {
  return true;
}

void FieldAccessInfo::Swap(FieldAccessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void FieldAccessInfo::InternalSwap(FieldAccessInfo* other) {
  name_.Swap(&other->name_);
  std::swap(getters_count_, other->getters_count_);
  std::swap(setters_count_, other->setters_count_);
  std::swap(configs_count_, other->configs_count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FieldAccessInfo::GetMetadata() const {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FieldAccessInfo

// optional string name = 1;
bool FieldAccessInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void FieldAccessInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void FieldAccessInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void FieldAccessInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& FieldAccessInfo::name() const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.FieldAccessInfo.name)
  return name_.GetNoArena();
}
void FieldAccessInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.compiler.FieldAccessInfo.name)
}
#if LANG_CXX11
void FieldAccessInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.compiler.FieldAccessInfo.name)
}
#endif
void FieldAccessInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.compiler.FieldAccessInfo.name)
}
void FieldAccessInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.compiler.FieldAccessInfo.name)
}
::std::string* FieldAccessInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:google.protobuf.compiler.FieldAccessInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* FieldAccessInfo::release_name() {
  // @@protoc_insertion_point(field_release:google.protobuf.compiler.FieldAccessInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void FieldAccessInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.compiler.FieldAccessInfo.name)
}

// optional uint64 getters_count = 2;
bool FieldAccessInfo::has_getters_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void FieldAccessInfo::set_has_getters_count() {
  _has_bits_[0] |= 0x00000002u;
}
void FieldAccessInfo::clear_has_getters_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void FieldAccessInfo::clear_getters_count() {
  getters_count_ = GOOGLE_ULONGLONG(0);
  clear_has_getters_count();
}
::google::protobuf::uint64 FieldAccessInfo::getters_count() const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.FieldAccessInfo.getters_count)
  return getters_count_;
}
void FieldAccessInfo::set_getters_count(::google::protobuf::uint64 value) {
  set_has_getters_count();
  getters_count_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.compiler.FieldAccessInfo.getters_count)
}

// optional uint64 setters_count = 3;
bool FieldAccessInfo::has_setters_count() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
void FieldAccessInfo::set_has_setters_count() {
  _has_bits_[0] |= 0x00000004u;
}
void FieldAccessInfo::clear_has_setters_count() {
  _has_bits_[0] &= ~0x00000004u;
}
void FieldAccessInfo::clear_setters_count() {
  setters_count_ = GOOGLE_ULONGLONG(0);
  clear_has_setters_count();
}
::google::protobuf::uint64 FieldAccessInfo::setters_count() const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.FieldAccessInfo.setters_count)
  return setters_count_;
}
void FieldAccessInfo::set_setters_count(::google::protobuf::uint64 value) {
  set_has_setters_count();
  setters_count_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.compiler.FieldAccessInfo.setters_count)
}

// optional uint64 configs_count = 4;
bool FieldAccessInfo::has_configs_count() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
void FieldAccessInfo::set_has_configs_count() {
  _has_bits_[0] |= 0x00000008u;
}
void FieldAccessInfo::clear_has_configs_count() {
  _has_bits_[0] &= ~0x00000008u;
}
void FieldAccessInfo::clear_configs_count() {
  configs_count_ = GOOGLE_ULONGLONG(0);
  clear_has_configs_count();
}
::google::protobuf::uint64 FieldAccessInfo::configs_count() const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.FieldAccessInfo.configs_count)
  return configs_count_;
}
void FieldAccessInfo::set_configs_count(::google::protobuf::uint64 value) {
  set_has_configs_count();
  configs_count_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.compiler.FieldAccessInfo.configs_count)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int MessageAccessInfo::kNameFieldNumber;
const int MessageAccessInfo::kCountFieldNumber;
const int MessageAccessInfo::kFieldFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

MessageAccessInfo::MessageAccessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.compiler.MessageAccessInfo)
}
MessageAccessInfo::MessageAccessInfo(const MessageAccessInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      field_(from.field_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (from.has_name()) {
    name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
  }
  count_ = from.count_;
  // @@protoc_insertion_point(copy_constructor:google.protobuf.compiler.MessageAccessInfo)
}

void MessageAccessInfo::SharedCtor() {
  _cached_size_ = 0;
  name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  count_ = GOOGLE_ULONGLONG(0);
}

MessageAccessInfo::~MessageAccessInfo() {
  // @@protoc_insertion_point(destructor:google.protobuf.compiler.MessageAccessInfo)
  SharedDtor();
}

void MessageAccessInfo::SharedDtor() {
  name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void MessageAccessInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* MessageAccessInfo::descriptor() {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const MessageAccessInfo& MessageAccessInfo::default_instance() {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

MessageAccessInfo* MessageAccessInfo::New(::google::protobuf::Arena* arena) const {
  MessageAccessInfo* n = new MessageAccessInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void MessageAccessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.compiler.MessageAccessInfo)
  field_.Clear();
  if (has_name()) {
    GOOGLE_DCHECK(!name_.IsDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited()));
    (*name_.UnsafeRawStringPointer())->clear();
  }
  count_ = GOOGLE_ULONGLONG(0);
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool MessageAccessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.compiler.MessageAccessInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string name = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormat::PARSE,
            "google.protobuf.compiler.MessageAccessInfo.name");
        } else {
          goto handle_unusual;
        }
        break;
      }

      // optional uint64 count = 2;
      case 2: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(16u)) {
          set_has_count();
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::uint64, ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                 input, &count_)));
        } else {
          goto handle_unusual;
        }
        break;
      }

      // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
      case 3: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(26u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_field()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.compiler.MessageAccessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.compiler.MessageAccessInfo)
  return false;
#undef DO_
}

void MessageAccessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.compiler.MessageAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.MessageAccessInfo.name");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      1, this->name(), output);
  }

  // optional uint64 count = 2;
  if (cached_has_bits & 0x00000002u) {
    ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->count(), output);
  }

  // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->field(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.compiler.MessageAccessInfo)
}

::google::protobuf::uint8* MessageAccessInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.compiler.MessageAccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  cached_has_bits = _has_bits_[0];
  // optional string name = 1;
  if (cached_has_bits & 0x00000001u) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->name().data(), static_cast<int>(this->name().length()),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "google.protobuf.compiler.MessageAccessInfo.name");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // optional uint64 count = 2;
  if (cached_has_bits & 0x00000002u) {
    target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->count(), target);
  }

  // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->field_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        3, this->field(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.compiler.MessageAccessInfo)
  return target;
}

size_t MessageAccessInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.compiler.MessageAccessInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
  {
    unsigned int count = static_cast<unsigned int>(this->field_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->field(static_cast<int>(i)));
    }
  }

  if (_has_bits_[0 / 32] & 3u) {
    // optional string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // optional uint64 count = 2;
    if (has_count()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::UInt64Size(
          this->count());
    }

  }
  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void MessageAccessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.compiler.MessageAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const MessageAccessInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const MessageAccessInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.compiler.MessageAccessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.compiler.MessageAccessInfo)
    MergeFrom(*source);
  }
}

void MessageAccessInfo::MergeFrom(const MessageAccessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.compiler.MessageAccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  field_.MergeFrom(from.field_);
  cached_has_bits = from._has_bits_[0];
  if (cached_has_bits & 3u) {
    if (cached_has_bits & 0x00000001u) {
      set_has_name();
      name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (cached_has_bits & 0x00000002u) {
      count_ = from.count_;
    }
    _has_bits_[0] |= cached_has_bits;
  }
}

void MessageAccessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.compiler.MessageAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void MessageAccessInfo::CopyFrom(const MessageAccessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.compiler.MessageAccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool MessageAccessInfo::IsInitialized() const {
  return true;
}

void MessageAccessInfo::Swap(MessageAccessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void MessageAccessInfo::InternalSwap(MessageAccessInfo* other) {
  field_.InternalSwap(&other->field_);
  name_.Swap(&other->name_);
  std::swap(count_, other->count_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata MessageAccessInfo::GetMetadata() const {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// MessageAccessInfo

// optional string name = 1;
bool MessageAccessInfo::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
void MessageAccessInfo::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
void MessageAccessInfo::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
void MessageAccessInfo::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_name();
}
const ::std::string& MessageAccessInfo::name() const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.MessageAccessInfo.name)
  return name_.GetNoArena();
}
void MessageAccessInfo::set_name(const ::std::string& value) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:google.protobuf.compiler.MessageAccessInfo.name)
}
#if LANG_CXX11
void MessageAccessInfo::set_name(::std::string&& value) {
  set_has_name();
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:google.protobuf.compiler.MessageAccessInfo.name)
}
#endif
void MessageAccessInfo::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:google.protobuf.compiler.MessageAccessInfo.name)
}
void MessageAccessInfo::set_name(const char* value, size_t size) {
  set_has_name();
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:google.protobuf.compiler.MessageAccessInfo.name)
}
::std::string* MessageAccessInfo::mutable_name() {
  set_has_name();
  // @@protoc_insertion_point(field_mutable:google.protobuf.compiler.MessageAccessInfo.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* MessageAccessInfo::release_name() {
  // @@protoc_insertion_point(field_release:google.protobuf.compiler.MessageAccessInfo.name)
  clear_has_name();
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void MessageAccessInfo::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    set_has_name();
  } else {
    clear_has_name();
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:google.protobuf.compiler.MessageAccessInfo.name)
}

// optional uint64 count = 2;
bool MessageAccessInfo::has_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
void MessageAccessInfo::set_has_count() {
  _has_bits_[0] |= 0x00000002u;
}
void MessageAccessInfo::clear_has_count() {
  _has_bits_[0] &= ~0x00000002u;
}
void MessageAccessInfo::clear_count() {
  count_ = GOOGLE_ULONGLONG(0);
  clear_has_count();
}
::google::protobuf::uint64 MessageAccessInfo::count() const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.MessageAccessInfo.count)
  return count_;
}
void MessageAccessInfo::set_count(::google::protobuf::uint64 value) {
  set_has_count();
  count_ = value;
  // @@protoc_insertion_point(field_set:google.protobuf.compiler.MessageAccessInfo.count)
}

// repeated .google.protobuf.compiler.FieldAccessInfo field = 3;
int MessageAccessInfo::field_size() const {
  return field_.size();
}
void MessageAccessInfo::clear_field() {
  field_.Clear();
}
const ::google::protobuf::compiler::FieldAccessInfo& MessageAccessInfo::field(int index) const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.MessageAccessInfo.field)
  return field_.Get(index);
}
::google::protobuf::compiler::FieldAccessInfo* MessageAccessInfo::mutable_field(int index) {
  // @@protoc_insertion_point(field_mutable:google.protobuf.compiler.MessageAccessInfo.field)
  return field_.Mutable(index);
}
::google::protobuf::compiler::FieldAccessInfo* MessageAccessInfo::add_field() {
  // @@protoc_insertion_point(field_add:google.protobuf.compiler.MessageAccessInfo.field)
  return field_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::compiler::FieldAccessInfo >*
MessageAccessInfo::mutable_field() {
  // @@protoc_insertion_point(field_mutable_list:google.protobuf.compiler.MessageAccessInfo.field)
  return &field_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::compiler::FieldAccessInfo >&
MessageAccessInfo::field() const {
  // @@protoc_insertion_point(field_list:google.protobuf.compiler.MessageAccessInfo.field)
  return field_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int AccessInfo::kMessageFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

AccessInfo::AccessInfo()
  : ::google::protobuf::Message(), _internal_metadata_(NULL) {
  if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
    protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::InitDefaults();
  }
  SharedCtor();
  // @@protoc_insertion_point(constructor:google.protobuf.compiler.AccessInfo)
}
AccessInfo::AccessInfo(const AccessInfo& from)
  : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      _has_bits_(from._has_bits_),
      _cached_size_(0),
      message_(from.message_) {
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  // @@protoc_insertion_point(copy_constructor:google.protobuf.compiler.AccessInfo)
}

void AccessInfo::SharedCtor() {
  _cached_size_ = 0;
}

AccessInfo::~AccessInfo() {
  // @@protoc_insertion_point(destructor:google.protobuf.compiler.AccessInfo)
  SharedDtor();
}

void AccessInfo::SharedDtor() {
}

void AccessInfo::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AccessInfo::descriptor() {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const AccessInfo& AccessInfo::default_instance() {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::InitDefaults();
  return *internal_default_instance();
}

AccessInfo* AccessInfo::New(::google::protobuf::Arena* arena) const {
  AccessInfo* n = new AccessInfo;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void AccessInfo::Clear() {
// @@protoc_insertion_point(message_clear_start:google.protobuf.compiler.AccessInfo)
  message_.Clear();
  _has_bits_.Clear();
  _internal_metadata_.Clear();
}

bool AccessInfo::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:google.protobuf.compiler.AccessInfo)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
      case 1: {
        if (static_cast< ::google::protobuf::uint8>(tag) ==
            static_cast< ::google::protobuf::uint8>(10u)) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_message()));
        } else {
          goto handle_unusual;
        }
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:google.protobuf.compiler.AccessInfo)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:google.protobuf.compiler.AccessInfo)
  return false;
#undef DO_
}

void AccessInfo::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:google.protobuf.compiler.AccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_size()); i < n; i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->message(static_cast<int>(i)), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:google.protobuf.compiler.AccessInfo)
}

::google::protobuf::uint8* AccessInfo::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
  (void)deterministic; // Unused
  // @@protoc_insertion_point(serialize_to_array_start:google.protobuf.compiler.AccessInfo)
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
  for (unsigned int i = 0,
      n = static_cast<unsigned int>(this->message_size()); i < n; i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      InternalWriteMessageNoVirtualToArray(
        1, this->message(static_cast<int>(i)), deterministic, target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:google.protobuf.compiler.AccessInfo)
  return target;
}

size_t AccessInfo::ByteSizeLong() const {
// @@protoc_insertion_point(message_byte_size_start:google.protobuf.compiler.AccessInfo)
  size_t total_size = 0;

  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  // repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
  {
    unsigned int count = static_cast<unsigned int>(this->message_size());
    total_size += 1UL * count;
    for (unsigned int i = 0; i < count; i++) {
      total_size +=
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->message(static_cast<int>(i)));
    }
  }

  int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = cached_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AccessInfo::MergeFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_merge_from_start:google.protobuf.compiler.AccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  const AccessInfo* source =
      ::google::protobuf::internal::DynamicCastToGenerated<const AccessInfo>(
          &from);
  if (source == NULL) {
  // @@protoc_insertion_point(generalized_merge_from_cast_fail:google.protobuf.compiler.AccessInfo)
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
  // @@protoc_insertion_point(generalized_merge_from_cast_success:google.protobuf.compiler.AccessInfo)
    MergeFrom(*source);
  }
}

void AccessInfo::MergeFrom(const AccessInfo& from) {
// @@protoc_insertion_point(class_specific_merge_from_start:google.protobuf.compiler.AccessInfo)
  GOOGLE_DCHECK_NE(&from, this);
  _internal_metadata_.MergeFrom(from._internal_metadata_);
  ::google::protobuf::uint32 cached_has_bits = 0;
  (void) cached_has_bits;

  message_.MergeFrom(from.message_);
}

void AccessInfo::CopyFrom(const ::google::protobuf::Message& from) {
// @@protoc_insertion_point(generalized_copy_from_start:google.protobuf.compiler.AccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AccessInfo::CopyFrom(const AccessInfo& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:google.protobuf.compiler.AccessInfo)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AccessInfo::IsInitialized() const {
  return true;
}

void AccessInfo::Swap(AccessInfo* other) {
  if (other == this) return;
  InternalSwap(other);
}
void AccessInfo::InternalSwap(AccessInfo* other) {
  message_.InternalSwap(&other->message_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata AccessInfo::GetMetadata() const {
  protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::protobuf_AssignDescriptorsOnce();
  return protobuf_google_2fprotobuf_2fcompiler_2fprofile_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// AccessInfo

// repeated .google.protobuf.compiler.MessageAccessInfo message = 1;
int AccessInfo::message_size() const {
  return message_.size();
}
void AccessInfo::clear_message() {
  message_.Clear();
}
const ::google::protobuf::compiler::MessageAccessInfo& AccessInfo::message(int index) const {
  // @@protoc_insertion_point(field_get:google.protobuf.compiler.AccessInfo.message)
  return message_.Get(index);
}
::google::protobuf::compiler::MessageAccessInfo* AccessInfo::mutable_message(int index) {
  // @@protoc_insertion_point(field_mutable:google.protobuf.compiler.AccessInfo.message)
  return message_.Mutable(index);
}
::google::protobuf::compiler::MessageAccessInfo* AccessInfo::add_message() {
  // @@protoc_insertion_point(field_add:google.protobuf.compiler.AccessInfo.message)
  return message_.Add();
}
::google::protobuf::RepeatedPtrField< ::google::protobuf::compiler::MessageAccessInfo >*
AccessInfo::mutable_message() {
  // @@protoc_insertion_point(field_mutable_list:google.protobuf.compiler.AccessInfo.message)
  return &message_;
}
const ::google::protobuf::RepeatedPtrField< ::google::protobuf::compiler::MessageAccessInfo >&
AccessInfo::message() const {
  // @@protoc_insertion_point(field_list:google.protobuf.compiler.AccessInfo.message)
  return message_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace compiler
}  // namespace protobuf
}  // namespace google

// @@protoc_insertion_point(global_scope)
