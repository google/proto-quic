In file included from fields_illegal_tracing.cpp:5:
./fields_illegal_tracing.h:32:1: warning: [blink-gc] Class 'PartObject' contains invalid fields.
class PartObject {
^
./fields_illegal_tracing.h:37:5: note: [blink-gc] OwnPtr field 'm_obj1' to a GC managed class declared here:
    OwnPtr<HeapObject> m_obj1;
    ^
./fields_illegal_tracing.h:38:5: note: [blink-gc] RefPtr field 'm_obj2' to a GC managed class declared here:
    RefPtr<HeapObject> m_obj2;
    ^
./fields_illegal_tracing.h:40:5: note: [blink-gc] std::unique_ptr field 'm_obj4' to a GC managed class declared here:
    std::unique_ptr<HeapObject> m_obj4;
    ^
./fields_illegal_tracing.h:42:5: warning: [blink-gc] Iterator field 'm_iterator2' to a GC managed collection declared here:
    HeapVector<Member<HeapObject>>::iterator m_iterator2;
    ^
./fields_illegal_tracing.h:43:5: warning: [blink-gc] Iterator field 'm_iterator3' to a GC managed collection declared here:
    HeapHashSet<PartObject>::const_iterator m_iterator3;
    ^
./fields_illegal_tracing.h:46:1: warning: [blink-gc] Class 'HeapObject' contains invalid fields.
class HeapObject : public GarbageCollectedFinalized<HeapObject> {
^
./fields_illegal_tracing.h:51:5: note: [blink-gc] OwnPtr field 'm_obj1' to a GC managed class declared here:
    OwnPtr<HeapObject> m_obj1;
    ^
./fields_illegal_tracing.h:52:5: note: [blink-gc] RefPtr field 'm_obj2' to a GC managed class declared here:
    RefPtr<HeapObject> m_obj2;
    ^
./fields_illegal_tracing.h:54:5: note: [blink-gc] std::unique_ptr field 'm_obj4' to a GC managed class declared here:
    std::unique_ptr<HeapObject> m_obj4;
    ^
./fields_illegal_tracing.h:55:5: warning: [blink-gc] Iterator field 'm_iterator3' to a GC managed collection declared here:
    HeapHashMap<int, Member<HeapObject>>::reverse_iterator m_iterator3;
    ^
./fields_illegal_tracing.h:56:5: warning: [blink-gc] Iterator field 'm_iterator4' to a GC managed collection declared here:
    HeapDeque<Member<HeapObject>>::const_reverse_iterator m_iterator4;
    ^
./fields_illegal_tracing.h:58:5: warning: [blink-gc] Iterator field 'm_iterator6' to a GC managed collection declared here:
    HeapLinkedHashSet<Member<HeapObject>>::const_iterator m_iterator6;
    ^
fields_illegal_tracing.cpp:9:1: warning: [blink-gc] Class 'PartObject' has untraced or not traceable fields.
void PartObject::Trace(Visitor* visitor) {
^
./fields_illegal_tracing.h:37:5: note: [blink-gc] Untraceable field 'm_obj1' declared here:
    OwnPtr<HeapObject> m_obj1;
    ^
./fields_illegal_tracing.h:38:5: note: [blink-gc] Untraceable field 'm_obj2' declared here:
    RefPtr<HeapObject> m_obj2;
    ^
./fields_illegal_tracing.h:40:5: note: [blink-gc] Untraceable field 'm_obj4' declared here:
    std::unique_ptr<HeapObject> m_obj4;
    ^
fields_illegal_tracing.cpp:16:1: warning: [blink-gc] Class 'HeapObject' has untraced or not traceable fields.
void HeapObject::Trace(Visitor* visitor) {
^
./fields_illegal_tracing.h:51:5: note: [blink-gc] Untraceable field 'm_obj1' declared here:
    OwnPtr<HeapObject> m_obj1;
    ^
./fields_illegal_tracing.h:52:5: note: [blink-gc] Untraceable field 'm_obj2' declared here:
    RefPtr<HeapObject> m_obj2;
    ^
./fields_illegal_tracing.h:54:5: note: [blink-gc] Untraceable field 'm_obj4' declared here:
    std::unique_ptr<HeapObject> m_obj4;
    ^
./fields_illegal_tracing.h:57:5: note: [blink-gc] Untraced field 'm_iterator5' declared here:
    HeapListHashSet<Member<HeapObject>>::const_iterator m_iterator5;
    ^
9 warnings generated.
