# Copyright 2015 The Chromium Authors. All rights reserved.
# Use of this source code is governed by a BSD-style license that can be
# found in the LICENSE file.

import("//build/config/compiler/compiler.gni")

if (is_win) {
  action("copy_cdb_to_output") {
    script = "//build/win/copy_cdb_to_output.py"
    inputs = [
      script,
    ]
    outputs = [
      "$root_out_dir/cdb/cdb.exe",
      "$root_out_dir/cdb/dbgeng.dll",
      "$root_out_dir/cdb/dbghelp.dll",
      "$root_out_dir/cdb/dbgmodel.dll",
      "$root_out_dir/cdb/winext/ext.dll",
      "$root_out_dir/cdb/winext/uext.dll",
      "$root_out_dir/cdb/winxp/exts.dll",
      "$root_out_dir/cdb/winxp/ntsdexts.dll",
      "$root_out_dir/cdb/api-ms-win-core-console-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-datetime-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-debug-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-errorhandling-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-file-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-file-l1-2-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-file-l2-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-handle-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-heap-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-interlocked-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-libraryloader-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-localization-l1-2-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-memory-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-namedpipe-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-processenvironment-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-processthreads-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-processthreads-l1-1-1.dll",
      "$root_out_dir/cdb/api-ms-win-core-profile-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-rtlsupport-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-string-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-synch-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-synch-l1-2-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-sysinfo-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-timezone-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-core-util-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-conio-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-convert-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-environment-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-filesystem-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-heap-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-locale-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-math-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-multibyte-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-private-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-process-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-runtime-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-stdio-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-string-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-time-l1-1-0.dll",
      "$root_out_dir/cdb/api-ms-win-crt-utility-l1-1-0.dll",
      "$root_out_dir/cdb/ucrtbase.dll",
    ]
    args = [
      rebase_path("$root_out_dir/cdb", root_out_dir),
      current_cpu,
    ]
  }
}

group("telemetry_chrome_test") {
  testonly = true

  if (is_android) {
    data_deps = [
      "//chrome/android:chrome_public_apk",
    ]
  } else {
    data_deps = [
      "//third_party/catapult/telemetry:bitmaptools",
    ]

    data_deps += [ "//chrome" ]
  }

  data = [
    "//tools/perf/chrome_telemetry_build/",
    "//third_party/catapult/",
    "//components/crash/content/tools/generate_breakpad_symbols.py",
  ]

  if (is_win) {
    data_deps += [ "//chrome:reorder_imports" ]
  }

  if (is_linux) {
    data_deps += [ "//breakpad:dump_syms($host_toolchain)" ]
  }

  if (is_mac) {
    data_deps += [
      "//breakpad:dump_syms",
      "//chrome:chrome_framework",
      "//chrome:chrome_helper_app",
      "//third_party/crashpad/crashpad/tools:crashpad_database_util",
    ]
  }

  if (is_win && (symbol_level == 1 || symbol_level == 2)) {
    data_deps += [
      ":copy_cdb_to_output",
      "//third_party/crashpad/crashpad/tools:crashpad_database_util",
    ]

    # TODO(GYP): These should be provided automatically through data_deps.
    data += [ "$root_out_dir/chrome.exe.pdb" ]
    if (is_component_build) {
      data += [
        "$root_out_dir/base.dll.pdb",
        "$root_out_dir/blink_platform.dll.pdb",
        "$root_out_dir/blink_web.dll.pdb",
        "$root_out_dir/content.dll.pdb",
      ]
    } else {
      data += [ "$root_out_dir/chrome_child.dll.pdb" ]
    }
  }
}
